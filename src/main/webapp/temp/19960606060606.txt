正在 Ping www.microclouds.top [221.179.46.194] 具有 32 字节的数据:
来自 221.179.46.194 的回复: 字节=32 时间=3ms TTL=54
来自 221.179.46.194 的回复: 字节=32 时间=3ms TTL=54
来自 221.179.46.194 的回复: 字节=32 时间=24ms TTL=54
来自 221.179.46.194 的回复: 字节=32 时间=5ms TTL=54



upoad.java controller
package com.microclouddisks.controller;

import org.apache.commons.io.FileUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;

@Controller
public class uploadController {

    @RequestMapping("/a")
    public String a() {
        System.out.println("this is upload.jsp");
        return "upload";
    }

    // 处理上传的
    @RequestMapping("/upload")
    public void upload(HttpServletRequest request, HttpServletResponse response,
                       @RequestParam("file") CommonsMultipartFile file) throws IOException {
        PrintWriter out;
        boolean flag = false;
        System.out.println("呢问问问问嫩我呢为你你你");
        if (file.getSize() > 0) {
            String path = "C:\\Users\\Administrator\\Desktop\\news\\";
//            String uploadPath = request.getSession().getServletContext().getRealPath(path);
            System.out.println("BBBBBBBBBBBBBBBBBBBBBBBB" + path);
            try {
                FileUtils.copyInputStreamToFile(file.getInputStream(),
                        new File(path, file.getOriginalFilename()));
                flag = true;
            } catch (Exception e) {
            }

        }
        out = response.getWriter();
        if (flag == true) {
            out.print("1");
        } else {
            out.print("2");
        }
    }
}



    @RequestMapping(value = "/uploads")
    public String uploadFiles(HttpServletRequest request, HttpSession session,
                              @RequestParam("uploadfiles") MultipartFile[] uploadfiles) throws IOException {
        MultipartFile uploadfile = null;
        String filesizetoString = null;
        for (int i = 0; i < uploadfiles.length; i++) {
//            获得每一个文件
            System.out.println("cccccccccccccccccccccccc" + i);
            uploadfile = uploadfiles[i];

            if (!uploadfile.isEmpty()) {
                String filepaths = request.getParameter("filepath");
                System.out.println("------>controller : uploadFiles : path : " + filepaths);
                String filename = uploadfile.getOriginalFilename();
                System.out.println("------>controller : uploadFiles : filename : " + filename);
                String filetype = uploadfile.getContentType();
                System.out.println("------>controller : uploadFiles : filetype : " + filetype);
                double filesize = uploadfile.getSize();
                System.out.println("------>controller : uploadFiles : filesize : " + filesize);
                diskUser user = (diskUser) session.getAttribute("diskuser");

                if (filepaths == null || filepaths.length() == 0) {
                    filepaths = user.getUsermail();
                }
                System.out.println("faiuogjkamggjkc mdfkc ");
                File file = new File("H:\\IDEAWorkspace\\MicroCloudDisks\\src\\main\\webapp\\uploads\\"
                        + filepaths + "\\");
                if (!file.exists()) {
                    file.mkdir();
                }
                File file1 = new File("H:\\IDEAWorkspace\\MicroCloudDisks\\src\\main\\webapp\\uploads\\"
                        + filepaths  + "\\"
                        + uploadfile.getOriginalFilename());
                uploadfile.transferTo(file1);

                int index = filename.lastIndexOf(".");
                String filetype2 = filename.substring(index + 1, filename.length());

                if (filesize >= 0 && filesize < 1024) {//文件大小小于 1K 字节级别
                    filesizetoString = String.valueOf(filesize) + " Bytes";
                } else if (filesize >= 1024 && filesize < 1024000) { //K
                    filesize = filesize / 1024;
                    filesizetoString = String.valueOf(filesize) + " KB";
                } else if (filesize >= 1024000 && filesize < 1024000000) {
                    filesize = filesize / 1024000;
                    filesizetoString = String.valueOf(filesize) + " MB";
                } else {
                    filesize = filesize / 1024000000;
                    filesizetoString = String.valueOf(filesize) + " GB";
                }
                System.out.println("ddddddddddddddd" + filetype2);
                Date date = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String time = formatter.format(date);
                folder folder = new folder();
                folder.setFolderid(filepaths + "-" + time + i);
                folder.setFoldername(filename);
                folder.setUsermail(user.getUsermail());
                folder.setUpdatetime(time);
                folder.setSizes(filesizetoString);
                folder.setFiletype(filetype2);
                folder.setParent(filepaths);
                folder.setNum(0);
                queryIcon iconquery = new queryIcon();
                folder.setIcon(iconquery.iconQuery(filetype2));
                System.out.println("uijkmv ,jjm cdj m,m +" + folder.getIcon());
                folder.setFilepath((filepaths + "\\" + filename).replace("\\", "*"));
                mainservice.creatFolder(folder);
//                session.setAttribute("nowfolder", foldername);
            } else {
                return "main";
            }
        }
        return "redirect:main";
    }


